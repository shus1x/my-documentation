{
  "version": 3,
  "sources": ["../../src/runtime/const.ts", "../../src/runtime/utils.ts", "../../src/runtime/controller.ts", "../../src/runtime/index.ts"],
  "sourcesContent": ["export const GLOBAL_KEY = 'yfm_cut';\n\nexport const Selector = {\n    CUT: '.yfm .yfm-cut',\n    TITLE: '.yfm .yfm-cut-title',\n    CONTENT: '.yfm .yfm-cut-content',\n};\n\nexport const ClassName = {\n    OPEN: 'open',\n};\n", "export const getEventTarget = (event: Event) => {\n    const path = event.composedPath();\n    return Array.isArray(path) && path.length > 0 ? path[0] : event.target;\n};\n\nexport const isCustom = (event: Event) => {\n    const target = getEventTarget(event);\n    return !target || !(target as HTMLElement).matches;\n};\n", "import {ClassName, Selector} from './const';\nimport {getEventTarget, isCustom} from './utils';\n\nexport class YfmCutController {\n    private readonly __doc: Document;\n\n    constructor(doc: Document) {\n        this.__doc = doc;\n        this.__doc.addEventListener('click', this._onDocClick);\n    }\n\n    destroy() {\n        this.__doc.removeEventListener('click', this._onDocClick);\n    }\n\n    focusActiveCut() {\n        const cutId = window.location.hash.slice(1);\n        const cutNode = document.getElementById(cutId) as HTMLDetailsElement | null;\n\n        if (!(cutNode instanceof HTMLElement)) {\n            return;\n        }\n\n        if (!cutNode.matches(Selector.CUT)) {\n            return;\n        }\n\n        cutNode.classList.toggle(ClassName.OPEN);\n        cutNode.setAttribute('open', 'true');\n\n        setTimeout(() => {\n            cutNode.classList.add('cut-highlight');\n            cutNode.scrollIntoView();\n        }, 70);\n\n        setTimeout(() => {\n            cutNode.classList.remove('cut-highlight');\n        }, 1_000);\n    }\n\n    private _onDocClick = (event: MouseEvent) => {\n        if (isCustom(event)) {\n            return;\n        }\n\n        const title = this._findTitleInPath(event);\n        if (title) {\n            this._toggleCut(title);\n        }\n    };\n\n    private _findTitleInPath(event: MouseEvent): HTMLElement | undefined {\n        const target = getEventTarget(event);\n        if (this._matchTitle(target)) {\n            return target as HTMLElement;\n        }\n\n        const path = event.composedPath?.();\n        return path?.find(this._matchTitle) as HTMLElement | undefined;\n    }\n\n    private _matchTitle = (target: EventTarget | null) => {\n        if (target instanceof HTMLElement) {\n            return target?.matches?.(Selector.TITLE);\n        }\n        return false;\n    };\n\n    private _toggleCut(element: HTMLElement) {\n        const cutNode = element.parentElement;\n        cutNode?.classList.toggle(ClassName.OPEN);\n    }\n}\n", "import {GLOBAL_KEY} from './const';\nimport {YfmCutController} from './controller';\nimport './styles/cut.scss';\n\nif (typeof window !== 'undefined' && typeof document !== 'undefined' && !window[GLOBAL_KEY]) {\n    window[GLOBAL_KEY] = new YfmCutController(document);\n}\n\ndeclare global {\n    interface Window {\n        [GLOBAL_KEY]: YfmCutController;\n    }\n}\n"],
  "mappings": "mBAAO,IAAMA,EAAa,UAEbC,EAAW,CACpB,IAAK,gBACL,MAAO,sBACP,QAAS,uBACb,EAEaC,EAAY,CACrB,KAAM,MACV,ECVO,IAAMC,EAAkBC,GAAiB,CAC5C,IAAMC,EAAOD,EAAM,aAAa,EAChC,OAAO,MAAM,QAAQC,CAAI,GAAKA,EAAK,OAAS,EAAIA,EAAK,CAAC,EAAID,EAAM,MACpE,EAEaE,EAAYF,GAAiB,CACtC,IAAMG,EAASJ,EAAeC,CAAK,EACnC,MAAO,CAACG,GAAU,CAAEA,EAAuB,OAC/C,ECLO,IAAMC,EAAN,KAAuB,CACT,MAEjB,YAAYC,EAAe,CACvB,KAAK,MAAQA,EACb,KAAK,MAAM,iBAAiB,QAAS,KAAK,WAAW,CACzD,CAEA,SAAU,CACN,KAAK,MAAM,oBAAoB,QAAS,KAAK,WAAW,CAC5D,CAEA,gBAAiB,CACb,IAAMC,EAAQ,OAAO,SAAS,KAAK,MAAM,CAAC,EACpCC,EAAU,SAAS,eAAeD,CAAK,EAEvCC,aAAmB,aAIpBA,EAAQ,QAAQC,EAAS,GAAG,IAIjCD,EAAQ,UAAU,OAAOE,EAAU,IAAI,EACvCF,EAAQ,aAAa,OAAQ,MAAM,EAEnC,WAAW,IAAM,CACbA,EAAQ,UAAU,IAAI,eAAe,EACrCA,EAAQ,eAAe,CAC3B,EAAG,EAAE,EAEL,WAAW,IAAM,CACbA,EAAQ,UAAU,OAAO,eAAe,CAC5C,EAAG,GAAK,EACZ,CAEQ,YAAeG,GAAsB,CACzC,GAAIC,EAASD,CAAK,EACd,OAGJ,IAAME,EAAQ,KAAK,iBAAiBF,CAAK,EACrCE,GACA,KAAK,WAAWA,CAAK,CAE7B,EAEQ,iBAAiBF,EAA4C,CACjE,IAAMG,EAASC,EAAeJ,CAAK,EACnC,OAAI,KAAK,YAAYG,CAAM,EAChBA,EAGEH,EAAM,eAAe,GACrB,KAAK,KAAK,WAAW,CACtC,CAEQ,YAAeG,GACfA,aAAkB,YACXA,GAAQ,UAAUL,EAAS,KAAK,EAEpC,GAGH,WAAWO,EAAsB,CACrBA,EAAQ,eACf,UAAU,OAAON,EAAU,IAAI,CAC5C,CACJ,ECpEI,OAAO,OAAW,KAAe,OAAO,SAAa,KAAe,CAAC,OAAOO,CAAU,IACtF,OAAOA,CAAU,EAAI,IAAIC,EAAiB,QAAQ",
  "names": ["GLOBAL_KEY", "Selector", "ClassName", "getEventTarget", "event", "path", "isCustom", "target", "YfmCutController", "doc", "cutId", "cutNode", "Selector", "ClassName", "event", "isCustom", "title", "target", "getEventTarget", "element", "GLOBAL_KEY", "YfmCutController"]
}
