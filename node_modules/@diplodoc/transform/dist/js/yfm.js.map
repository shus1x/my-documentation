{
  "version": 3,
  "sources": ["../../node_modules/get-root-node-polyfill/index.js", "../../node_modules/@diplodoc/cut-extension/src/runtime/const.ts", "../../node_modules/@diplodoc/cut-extension/src/runtime/utils.ts", "../../node_modules/@diplodoc/cut-extension/src/runtime/controller.ts", "../../node_modules/@diplodoc/cut-extension/src/runtime/index.ts", "../../node_modules/@diplodoc/tabs-extension/src/common.ts", "../../node_modules/@diplodoc/tabs-extension/src/runtime/utils.ts", "../../node_modules/@diplodoc/tabs-extension/src/runtime/TabsController.ts", "../../node_modules/@diplodoc/tabs-extension/src/runtime/index.ts", "../../src/js/polyfill.js", "../../src/js/utils.ts", "../../src/js/code.ts", "../../src/js/term/utils.ts", "../../src/js/term/index.ts", "../../src/js/wide-mode/constants.ts", "../../src/js/wide-mode/icons/expand.ts", "../../src/js/wide-mode/icons/close.ts", "../../src/js/wide-mode/modal.ts", "../../src/js/wide-mode/apply.ts", "../../src/js/wide-mode/index.ts", "../../src/js/patch.ts"],
  "sourcesContent": ["'use strict';\n\n// Node getRootNode(optional GetRootNodeOptions options);\n\n/**\n * Returns the context object\u2019s shadow-including root if options\u2019s composed is true.\n * Returns the context object\u2019s root otherwise.\n *\n * The root of an object is itself, if its parent is null, or else it is the root of its parent.\n *\n * The shadow-including root of an object is its root\u2019s host\u2019s shadow-including root,\n * if the object\u2019s root is a shadow root, and its root otherwise.\n *\n * https://dom.spec.whatwg.org/#dom-node-getrootnode\n *\n * @memberof Node.prototype\n * @param {!Object} [opt = {}] - Options.\n * @param {!boolean} [opt.composed] - See above description.\n * @returns {!Node} The root node.\n */\nfunction getRootNode(opt) {\n  var composed = typeof opt === 'object' && Boolean(opt.composed);\n\n  return composed ? getShadowIncludingRoot(this) : getRoot(this);\n}\n\nfunction getShadowIncludingRoot(node) {\n  var root = getRoot(node);\n\n  if (isShadowRoot(root)) {\n    return getShadowIncludingRoot(root.host);\n  }\n\n  return root;\n}\n\nfunction getRoot(node) {\n  if (node.parentNode != null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\nfunction isShadowRoot(node) {\n  return node.nodeName === '#document-fragment' && node.constructor.name === 'ShadowRoot';\n}\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = getRootNode;\n}\n", "export const GLOBAL_KEY = 'yfm_cut';\n\nexport const Selector = {\n    CUT: '.yfm .yfm-cut',\n    TITLE: '.yfm .yfm-cut-title',\n    CONTENT: '.yfm .yfm-cut-content',\n};\n\nexport const ClassName = {\n    OPEN: 'open',\n};\n", "export const getEventTarget = (event: Event) => {\n    const path = event.composedPath();\n    return Array.isArray(path) && path.length > 0 ? path[0] : event.target;\n};\n\nexport const isCustom = (event: Event) => {\n    const target = getEventTarget(event);\n    return !target || !(target as HTMLElement).matches;\n};\n", "import {ClassName, Selector} from './const';\nimport {getEventTarget, isCustom} from './utils';\n\nexport class YfmCutController {\n    private readonly __doc: Document;\n\n    constructor(doc: Document) {\n        this.__doc = doc;\n        this.__doc.addEventListener('click', this._onDocClick);\n    }\n\n    destroy() {\n        this.__doc.removeEventListener('click', this._onDocClick);\n    }\n\n    focusActiveCut() {\n        const cutId = window.location.hash.slice(1);\n        const cutNode = document.getElementById(cutId) as HTMLDetailsElement | null;\n\n        if (!(cutNode instanceof HTMLElement)) {\n            return;\n        }\n\n        if (!cutNode.matches(Selector.CUT)) {\n            return;\n        }\n\n        cutNode.classList.toggle(ClassName.OPEN);\n        cutNode.setAttribute('open', 'true');\n\n        setTimeout(() => {\n            cutNode.classList.add('cut-highlight');\n            cutNode.scrollIntoView();\n        }, 70);\n\n        setTimeout(() => {\n            cutNode.classList.remove('cut-highlight');\n        }, 1_000);\n    }\n\n    private _onDocClick = (event: MouseEvent) => {\n        if (isCustom(event)) {\n            return;\n        }\n\n        const title = this._findTitleInPath(event);\n        if (title) {\n            this._toggleCut(title);\n        }\n    };\n\n    private _findTitleInPath(event: MouseEvent): HTMLElement | undefined {\n        const target = getEventTarget(event);\n        if (this._matchTitle(target)) {\n            return target as HTMLElement;\n        }\n\n        const path = event.composedPath?.();\n        return path?.find(this._matchTitle) as HTMLElement | undefined;\n    }\n\n    private _matchTitle = (target: EventTarget | null) => {\n        if (target instanceof HTMLElement) {\n            return target?.matches?.(Selector.TITLE);\n        }\n        return false;\n    };\n\n    private _toggleCut(element: HTMLElement) {\n        const cutNode = element.parentElement;\n        cutNode?.classList.toggle(ClassName.OPEN);\n    }\n}\n", "import {GLOBAL_KEY} from './const';\nimport {YfmCutController} from './controller';\nimport './styles/cut.scss';\n\nif (typeof window !== 'undefined' && typeof document !== 'undefined' && !window[GLOBAL_KEY]) {\n    window[GLOBAL_KEY] = new YfmCutController(document);\n}\n\ndeclare global {\n    interface Window {\n        [GLOBAL_KEY]: YfmCutController;\n    }\n}\n", "import {type TabsController} from './runtime/TabsController';\n\nexport const TAB_RE = /`?{% list tabs .*?%}`?/;\nexport const TABS_CLASSNAME = 'yfm-tabs';\nexport const TAB_CLASSNAME = 'yfm-tab';\nexport const TAB_PANEL_CLASSNAME = 'yfm-tab-panel';\nexport const TABS_LIST_CLASSNAME = 'yfm-tab-list';\nexport const ACTIVE_CLASSNAME = 'active';\nexport const TAB_GROUP_CLASSNAME = 'yfm-tab-group';\nexport const TAB_ACTIVE_KEY = 'data-diplodoc-is-active';\nexport const GROUP_DATA_KEY = 'data-diplodoc-group';\nexport const TAB_DATA_KEY = 'data-diplodoc-key';\nexport const TAB_DATA_VARIANT = 'data-diplodoc-variant';\nexport const TAB_DATA_ID = 'data-diplodoc-id';\nexport const DEFAULT_TABS_GROUP_PREFIX = 'defaultTabsGroup-';\nexport const ACTIVE_TAB_TEXT = '{selected}';\nexport const TAB_FORCED_OPEN = 'data-diplodoc-forced';\n\nexport const TABS_DROPDOWN_CLASSNAME = 'yfm-tabs-dropdown';\nexport const TABS_DROPDOWN_MENU_CLASSNAME = 'yfm-tabs-dropdown-menu';\nexport const TABS_DROPDOWN_SELECT = 'yfm-tabs-dropdown-select';\n\nexport const TABS_ACCORDION_CLASSNAME = 'yfm-tabs-accordion';\nexport const TABS_ACCORDION_CLIENT_HEIGHT = 'data-yfm-tabs-accordion-client-heights';\n\nexport const TABS_RADIO_CLASSNAME = 'yfm-tabs-vertical';\nexport const VERTICAL_TAB_CLASSNAME = 'yfm-vertical-tab';\nexport const TAB_DATA_VERTICAL_TAB = 'data-diplodoc-vertical-tab';\nexport const TAB_RADIO_KEY = 'data-diplodoc-input';\n\nexport enum TabsVariants {\n    Regular = 'regular',\n    Radio = 'radio',\n    Dropdown = 'dropdown',\n    Accordion = 'accordion',\n}\n\nexport type EnabledVariants = Partial<Record<TabsVariants, boolean>>;\n\nexport interface Tab {\n    group?: string;\n    key: string;\n    variant: TabsVariants;\n}\n\nexport interface SelectedTabEvent {\n    tab: Tab;\n    currentTabId?: string;\n}\n\nexport const GLOBAL_SYMBOL: unique symbol = Symbol.for('diplodocTabs');\n\ndeclare global {\n    interface Window {\n        [GLOBAL_SYMBOL]: TabsController;\n    }\n}\n", "export const getEventTarget = (event: Event) => {\n    const path = event.composedPath();\n    return Array.isArray(path) && path.length > 0 ? path[0] : event.target;\n};\n\nexport const isCustom = (event: Event) => {\n    const target = getEventTarget(event);\n    return !target || !(target as HTMLElement).matches;\n};\n\nexport const getClosestScrollableParent = (element: HTMLElement): HTMLElement | undefined => {\n    if (Math.abs(element.scrollHeight - element.clientHeight) > 1) {\n        return element;\n    }\n\n    return element.parentElement ? getClosestScrollableParent(element.parentElement) : undefined;\n};\n\nexport interface ElementOffset {\n    top: number;\n    left: number;\n    scrollTop: number;\n    scrollLeft: number;\n}\n\nexport const getOffsetByScrollableParent = (\n    element: HTMLElement,\n    scrollableParent: HTMLElement,\n): ElementOffset => {\n    const elementBounds = element.getBoundingClientRect();\n    const scrollableParentBounds = scrollableParent.getBoundingClientRect();\n    return {\n        top: elementBounds.top - scrollableParentBounds.top,\n        left: elementBounds.left - scrollableParentBounds.left,\n        scrollTop: scrollableParent.scrollTop,\n        scrollLeft: scrollableParent.scrollLeft,\n    };\n};\n", "import {\n    ACTIVE_CLASSNAME,\n    DEFAULT_TABS_GROUP_PREFIX,\n    GROUP_DATA_KEY,\n    SelectedTabEvent,\n    TABS_CLASSNAME,\n    TABS_DROPDOWN_SELECT,\n    TABS_LIST_CLASSNAME,\n    TABS_RADIO_CLASSNAME,\n    TAB_CLASSNAME,\n    TAB_DATA_ID,\n    TAB_DATA_KEY,\n    TAB_DATA_VARIANT,\n    TAB_FORCED_OPEN,\n    TAB_PANEL_CLASSNAME,\n    Tab,\n    TabsVariants,\n} from '../common';\n\nimport {\n    ElementOffset,\n    getClosestScrollableParent,\n    getEventTarget,\n    getOffsetByScrollableParent,\n    isCustom,\n} from './utils';\n\nconst Selector = {\n    TABS: `.${TABS_CLASSNAME}`,\n    TAB_LIST: `.${TABS_LIST_CLASSNAME}`,\n    TAB: `.${TAB_CLASSNAME}`,\n    TAB_PANEL: `.${TAB_PANEL_CLASSNAME}`,\n    VERTICAL_TABS: `.${TABS_RADIO_CLASSNAME}`,\n};\n\nexport interface ISelectTabByIdOptions {\n    scrollToElement: boolean;\n}\n\ntype Handler = (data: SelectedTabEvent) => void;\n\ntype TabSwitchDirection = 'left' | 'right';\n\nexport class TabsController {\n    private _document: Document;\n    private _onSelectTabHandlers: Set<Handler> = new Set();\n\n    // TODO: remove side effects from constructor\n    constructor(document: Document) {\n        this._document = document;\n\n        this._document.addEventListener('click', (event) => {\n            const target = getEventTarget(event) as HTMLElement;\n\n            if (event.target) {\n                this.hideAllDropdown(event.target as HTMLElement);\n            }\n\n            if (isCustom(event)) {\n                return;\n            }\n\n            if (this.isElementDropdownSelect(target)) {\n                target.classList.toggle(ACTIVE_CLASSNAME);\n\n                return;\n            }\n\n            if (!this.isValidTabElement(target)) {\n                return;\n            }\n\n            const tab = this.getTabDataFromHTMLElement(target);\n\n            if (tab) {\n                this._selectTab(tab, target);\n            }\n        });\n\n        this._document.addEventListener('keydown', (event) => {\n            let direction: TabSwitchDirection | null = null;\n            switch (event.key) {\n                case 'ArrowLeft': {\n                    direction = 'left';\n                    break;\n                }\n                case 'ArrowRight': {\n                    direction = 'right';\n                    break;\n                }\n                case 'ArrowUp': {\n                    direction = 'left';\n                    break;\n                }\n                case 'ArrowDown': {\n                    direction = 'right';\n                    break;\n                }\n            }\n            if (!direction) {\n                return;\n            }\n\n            const target = getEventTarget(event) as HTMLElement;\n\n            if (isCustom(event) || !this.isValidTabElement(target)) {\n                return;\n            }\n\n            const {tabs, nodes} = this.getTabs(target);\n            const currentTab = this.getTabDataFromHTMLElement(target);\n            const currentTabIndex = tabs.findIndex(\n                ({key}) => currentTab?.key && key === currentTab.key,\n            );\n            if (!currentTab || tabs.length <= 1 || currentTabIndex === -1) {\n                return;\n            }\n\n            const newIndex =\n                (currentTabIndex + (direction === 'left' ? -1 : 1) + tabs.length) % tabs.length;\n\n            this.selectTab(tabs[newIndex]);\n            nodes[newIndex].focus();\n        });\n    }\n\n    onSelectTab(handler: Handler) {\n        this._onSelectTabHandlers.add(handler);\n\n        return () => {\n            this._onSelectTabHandlers.delete(handler);\n        };\n    }\n\n    selectTabById(id: string, options?: ISelectTabByIdOptions) {\n        const target = this._document.querySelector(\n            `${Selector.TAB}[${TAB_DATA_ID}=\"${id}\"]`,\n        ) as HTMLElement;\n\n        if (!target || !this.isValidTabElement(target)) {\n            return;\n        }\n\n        const tab = this.getTabDataFromHTMLElement(target);\n\n        if (tab) {\n            this._selectTab(tab, target);\n        }\n\n        if (options?.scrollToElement) {\n            target.scrollIntoView();\n        }\n    }\n\n    selectTab(tab: Tab) {\n        this._selectTab(tab);\n    }\n\n    private _selectTab(tab: Tab, targetTab?: HTMLElement) {\n        const {group, key, variant} = tab;\n\n        if (!group) {\n            return;\n        }\n\n        const scrollableParent = targetTab && getClosestScrollableParent(targetTab);\n        const previousTargetOffset =\n            scrollableParent && getOffsetByScrollableParent(targetTab, scrollableParent);\n\n        const updatedTabs = this.updateHTML({group, key, variant}, targetTab, variant);\n\n        if (updatedTabs > 0) {\n            this.fireSelectTabEvent({group, key, variant}, targetTab?.dataset.diplodocId);\n\n            if (previousTargetOffset) {\n                this.resetScroll(targetTab, scrollableParent, previousTargetOffset);\n            }\n        }\n    }\n\n    private updateHTML(tab: Required<Tab>, target: HTMLElement | undefined, variant: TabsVariants) {\n        switch (variant) {\n            case TabsVariants.Radio: {\n                return this.updateHTMLRadio(tab, target);\n            }\n            case TabsVariants.Accordion: {\n                return this.updateHTMLAccordion(tab, target);\n            }\n            case TabsVariants.Regular: {\n                return this.updateHTMLRegular(tab);\n            }\n            case TabsVariants.Dropdown: {\n                return this.updateHTMLDropdown(tab);\n            }\n        }\n\n        return 0;\n    }\n\n    private updateHTMLRadio(tab: Required<Tab>, target: HTMLElement | undefined) {\n        const {group, key} = tab;\n\n        const {isForced, root} = this.didTabOpenForce(target);\n\n        const singleTabSelector = isForced ? `.yfm-vertical-tab[${TAB_FORCED_OPEN}=\"true\"]` : '';\n\n        const tabs = this._document.querySelectorAll(\n            `${Selector.TABS}[${GROUP_DATA_KEY}=\"${group}\"] ${Selector.TAB}[${TAB_DATA_KEY}=\"${key}\"]${singleTabSelector}`,\n        );\n\n        if (isForced) {\n            root?.removeAttribute(TAB_FORCED_OPEN);\n        }\n\n        let updated = 0;\n\n        tabs.forEach((tab) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const root = tab.parentNode!;\n            const elements = root.children;\n\n            for (let i = 0; i < elements.length; i += 2) {\n                const [title, content] = [elements.item(i), elements.item(i + 1)] as HTMLElement[];\n\n                const input = title.children.item(0) as HTMLInputElement;\n\n                if (title === tab) {\n                    const checked = input.checked;\n\n                    if (checked) {\n                        title.classList.remove('active');\n                        content?.classList.remove('active');\n\n                        input.removeAttribute('checked');\n                    } else {\n                        title.classList.add('active');\n                        content?.classList.add('active');\n\n                        input.setAttribute('checked', 'true');\n                    }\n\n                    continue;\n                }\n\n                if (input.hasAttribute('checked')) {\n                    title.classList.remove('active');\n                    content?.classList.remove('active');\n\n                    input.removeAttribute('checked');\n                }\n\n                updated++;\n            }\n        });\n\n        return updated;\n    }\n\n    private updateHTMLRegular(tab: Required<Tab>) {\n        const {group, key} = tab;\n\n        const tabs = this._document.querySelectorAll(\n            `${Selector.TABS}[${GROUP_DATA_KEY}=\"${group}\"] ${Selector.TAB}[${TAB_DATA_KEY}=\"${key}\"]`,\n        );\n\n        let updated = 0;\n\n        tabs.forEach((element) => {\n            const htmlElem = element as HTMLElement;\n            if (!this.isValidTabElement(htmlElem) || htmlElem.dataset.diplodocIsActive === 'true') {\n                return;\n            }\n\n            updated++;\n\n            const tab = element;\n            const tabList = tab.parentNode;\n            const tabsContainer = tabList?.parentNode;\n            const allTabs = Array.from(tabList?.querySelectorAll(Selector.TAB) || []);\n            const allPanels = Array.from(tabsContainer?.children || []).filter((node) =>\n                node.classList.contains(TAB_PANEL_CLASSNAME),\n            );\n            const targetIndex = allTabs.indexOf(tab);\n\n            allTabs.forEach((tab, i) => {\n                const panel = allPanels[i];\n                const isTargetTab = i === targetIndex;\n                const htmlElem = tab as HTMLElement;\n\n                htmlElem.dataset.diplodocIsActive = isTargetTab ? 'true' : 'false';\n\n                tab.classList.toggle(ACTIVE_CLASSNAME, isTargetTab);\n                tab.setAttribute('aria-selected', isTargetTab.toString());\n                tab.setAttribute('tabindex', isTargetTab ? '0' : '-1');\n                panel.classList.toggle(ACTIVE_CLASSNAME, isTargetTab);\n            });\n        });\n\n        return updated;\n    }\n\n    private updateHTMLDropdown(tab: Required<Tab>) {\n        const {group, key} = tab;\n\n        const tabs = this._document.querySelectorAll(\n            `${Selector.TABS}[${GROUP_DATA_KEY}=\"${group}\"] ${Selector.TAB}[${TAB_DATA_KEY}=\"${key}\"]`,\n        );\n\n        let changed = 0;\n\n        tabs.forEach((tab) => {\n            const dropdown = tab.closest(`[${TAB_DATA_VARIANT}=${TabsVariants.Dropdown}]`);\n\n            if (!dropdown?.children) {\n                return;\n            }\n\n            const select = dropdown.children.item(0) as HTMLElement;\n            const menu = dropdown.children.item(1);\n\n            select?.classList.remove(ACTIVE_CLASSNAME);\n\n            /* first and second elements are select / menu, skipping them */\n            const changedIndex = Array.from(menu?.children || []).indexOf(tab) + 2;\n\n            for (let i = 2; i < dropdown.children.length; i++) {\n                const item = dropdown.children.item(i) as HTMLElement;\n                const menuItem = menu?.children.item(i - 2) as HTMLElement;\n\n                changed++;\n\n                if (changedIndex === i) {\n                    item?.classList.add(ACTIVE_CLASSNAME);\n                    menuItem.classList.add(ACTIVE_CLASSNAME);\n\n                    select.innerHTML = tab.innerHTML;\n                    select.classList.add('filled');\n\n                    continue;\n                }\n\n                menuItem.classList.remove(ACTIVE_CLASSNAME);\n                item.classList.remove(ACTIVE_CLASSNAME);\n            }\n        });\n\n        return changed;\n    }\n\n    private updateHTMLAccordion(tab: Required<Tab>, target: HTMLElement | undefined) {\n        const {group, key} = tab;\n\n        const tabs = this._document.querySelectorAll(\n            `${Selector.TABS}[${GROUP_DATA_KEY}=\"${group}\"] ${Selector.TAB}[${TAB_DATA_KEY}=\"${key}\"]`,\n        );\n\n        let changed = 0;\n\n        tabs.forEach((tab) => {\n            const accordion = tab.closest(`[${TAB_DATA_VARIANT}=${TabsVariants.Accordion}]`);\n\n            if (!accordion?.children) {\n                return;\n            }\n\n            for (let i = 0; i < accordion.children.length; i += 2) {\n                const title = accordion.children.item(i);\n                const currentTab = accordion.children.item(i + 1);\n\n                changed++;\n\n                if (tab === title) {\n                    title?.classList.toggle(ACTIVE_CLASSNAME);\n                    currentTab?.classList.toggle(ACTIVE_CLASSNAME);\n\n                    continue;\n                }\n\n                title?.classList.remove(ACTIVE_CLASSNAME);\n                currentTab?.classList.remove(ACTIVE_CLASSNAME);\n            }\n        });\n\n        if (target && !this.checkVisible(target)) {\n            setTimeout(() => {\n                target.scrollIntoView({block: 'nearest'});\n            });\n        }\n\n        return changed;\n    }\n\n    private checkVisible(element: HTMLElement) {\n        const rect = element.getBoundingClientRect();\n        const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n\n        return !(rect.bottom < 0 || rect.top - viewHeight >= 0);\n    }\n\n    private hideAllDropdown(target: HTMLElement) {\n        const dropdowns = this._document.querySelectorAll('.yfm-tabs-dropdown-select.active');\n\n        dropdowns.forEach((menu) => {\n            if (!menu.contains(target)) {\n                menu.classList.remove(ACTIVE_CLASSNAME);\n            }\n        });\n    }\n\n    private resetScroll(\n        target: HTMLElement,\n        scrollableParent: HTMLElement,\n        previousTargetOffset: ElementOffset,\n    ) {\n        const targetOffset = getOffsetByScrollableParent(target, scrollableParent);\n        const topDelta = targetOffset.top - previousTargetOffset.top;\n        const leftDelta = targetOffset.left - previousTargetOffset.left;\n        const scrollTopDelta = targetOffset.scrollTop - previousTargetOffset.scrollTop;\n        const scrollLeftDelta = targetOffset.scrollLeft - previousTargetOffset.scrollLeft;\n        scrollableParent.scrollTo(\n            scrollableParent.scrollLeft + leftDelta - scrollLeftDelta,\n            scrollableParent.scrollTop + topDelta - scrollTopDelta,\n        );\n    }\n\n    private didTabOpenForce(target?: HTMLElement) {\n        if (!target) {\n            return {};\n        }\n\n        if (target.dataset.diplodocForced) {\n            return {root: target, isForced: true};\n        }\n\n        const root = target.dataset.diplodocVerticalTab ? target : target.parentElement;\n\n        const isForced = typeof root?.dataset.diplodocForced !== 'undefined';\n\n        return {root, isForced};\n    }\n\n    private fireSelectTabEvent(tab: Required<Tab>, diplodocId?: string) {\n        const {group, key, variant: align} = tab;\n\n        const eventTab: Tab = group.startsWith(DEFAULT_TABS_GROUP_PREFIX)\n            ? {key, variant: align}\n            : tab;\n\n        this._onSelectTabHandlers.forEach((handler) => {\n            handler({tab: eventTab, currentTabId: diplodocId});\n        });\n    }\n\n    private getTabsType(element: HTMLElement) {\n        const tabsRoot = element.closest(`[${TAB_DATA_VARIANT}]`) as HTMLElement | undefined;\n\n        if (!tabsRoot) {\n            return undefined;\n        }\n\n        return tabsRoot.dataset.diplodocVariant;\n    }\n\n    private isValidTabElement(element: HTMLElement) {\n        return Boolean(this.getTabsType(element));\n    }\n\n    private isElementDropdownSelect(target: HTMLElement) {\n        return target.classList.contains(TABS_DROPDOWN_SELECT);\n    }\n\n    private getTabDataFromHTMLElement(target: HTMLElement): Tab | null {\n        const type = this.getTabsType(target);\n\n        if (type === TabsVariants.Radio) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const tab = target.dataset.diplodocVerticalTab ? target : target.parentElement!;\n\n            const key = tab.dataset.diplodocKey;\n            const group = (tab.closest(Selector.TABS) as HTMLElement)?.dataset.diplodocGroup;\n            return key && group ? {group, key, variant: TabsVariants.Radio} : null;\n        }\n\n        if (type === TabsVariants.Dropdown || type === TabsVariants.Accordion) {\n            const key = target.dataset.diplodocKey;\n            const group = (target.closest(Selector.TABS) as HTMLElement)?.dataset.diplodocGroup;\n            return key && group ? {group, key, variant: type} : null;\n        }\n\n        const key = target.dataset.diplodocKey;\n        const group = (target.closest(Selector.TABS) as HTMLElement)?.dataset.diplodocGroup;\n        return key && group ? {group, key, variant: TabsVariants.Regular} : null;\n    }\n\n    private getTabs(target: HTMLElement): {tabs: Tab[]; nodes: NodeListOf<HTMLElement>} {\n        const group = (target.closest(Selector.TABS) as HTMLElement)?.dataset.diplodocGroup;\n        const nodes = (\n            target.closest(Selector.TAB_LIST) as HTMLElement\n        )?.querySelectorAll<HTMLElement>(Selector.TAB);\n\n        const tabs: Tab[] = [];\n        nodes.forEach((tabEl) => {\n            const key = tabEl?.dataset.diplodocKey;\n            if (!key) {\n                return;\n            }\n\n            /** horizontal-only supported feature (used in left/right button click) */\n            tabs.push({\n                group,\n                key,\n                variant: TabsVariants.Regular,\n            });\n        });\n\n        return {tabs, nodes};\n    }\n}\n", "import {GLOBAL_SYMBOL} from '../common';\n\nimport {TabsController} from './TabsController';\nimport './scss/tabs.scss';\n\nif (typeof window !== 'undefined' && typeof document !== 'undefined' && !window[GLOBAL_SYMBOL]) {\n    window[GLOBAL_SYMBOL] = new TabsController(document);\n}\n", "import getRootNode from 'get-root-node-polyfill';\n\nif (typeof document !== 'undefined') {\n    // matches polyfill for old edge\n    (function (e) {\n        const matches =\n            e.matches ||\n            e.matchesSelector ||\n            e.webkitMatchesSelector ||\n            e.mozMatchesSelector ||\n            e.msMatchesSelector ||\n            e.oMatchesSelector;\n\n        if (matches) {\n            e.matches = e.matchesSelector = matches;\n        } else {\n            e.matches = e.matchesSelector = function matches(selector) {\n                const rootNode = e.getRootNode ? e.getRootNode() : getRootNode.call(e);\n                const matches = rootNode.querySelectorAll(selector);\n                const th = this;\n                return Array.prototype.some.call(matches, (e) => {\n                    return e === th;\n                });\n            };\n        }\n    })(Element.prototype);\n}\n", "export const getEventTarget = (event: Event) => {\n    const path = event.composedPath();\n    return Array.isArray(path) && path.length > 0 ? path[0] : event.target;\n};\n\nexport const isCustom = (event: Event) => {\n    const target = getEventTarget(event);\n    return !target || !(target as HTMLElement).matches;\n};\n", "import {getEventTarget, isCustom} from './utils';\n\nconst BUTTON_SELECTOR = '.yfm-clipboard-button';\n\nfunction copyToClipboard(text: string) {\n    if (!text) {\n        return Promise.resolve();\n    }\n\n    if (navigator.clipboard && typeof navigator.clipboard.writeText) {\n        return navigator.clipboard.writeText(text);\n    }\n    const textarea = document.createElement('textarea');\n    textarea.setAttribute('style', 'position: absolute; left: 1000%');\n    textarea.textContent = text;\n    document.body.append(textarea);\n\n    textarea.select();\n    document.execCommand('copy');\n\n    document.body.removeChild(textarea);\n\n    return Promise.resolve();\n}\n\nfunction notifySuccess(svgButton: HTMLElement | null) {\n    if (!svgButton) {\n        return;\n    }\n\n    const id = svgButton.getAttribute('data-animation');\n    // @ts-expect-error\n    const icon = svgButton.getRootNode().getElementById(`visibileAnimation-${id}`);\n\n    if (!icon) {\n        return;\n    }\n\n    icon.beginElement();\n}\n\nif (typeof document !== 'undefined') {\n    document.addEventListener('click', (event) => {\n        const target = getEventTarget(event) as HTMLElement;\n\n        if (isCustom(event) || !target.matches(BUTTON_SELECTOR)) {\n            return;\n        }\n\n        const parent = target.parentNode;\n\n        if (!parent) {\n            return;\n        }\n\n        const code = parent.querySelector<HTMLElement>('pre code');\n        if (!code) {\n            return;\n        }\n\n        copyToClipboard(code.innerText).then(() => {\n            notifySuccess(parent.querySelector('.yfm-clipboard-icon'));\n        });\n    });\n}\n", "export const Selector = {\n    TITLE: '.yfm .yfm-term_title',\n    CONTENT: '.yfm .yfm-term_dfn',\n};\nexport const openClass = 'open';\nexport const openDefinitionClass = Selector.CONTENT.replace(/\\./g, '') + ' ' + openClass;\nlet isListenerNeeded = true;\n\nexport function createDefinitionElement(termElement: HTMLElement) {\n    const termKey = termElement.getAttribute('term-key');\n    const definitionTemplate = document.getElementById(\n        `${termKey}_template`,\n    ) as HTMLTemplateElement;\n    const definitionElement = definitionTemplate?.content.cloneNode(true).firstChild as HTMLElement;\n\n    definitionTemplate?.parentElement?.appendChild(definitionElement);\n    definitionTemplate.remove();\n\n    return definitionElement;\n}\n\nexport function setDefinitionId(definitionElement: HTMLElement, termElement: HTMLElement): void {\n    const termId = termElement.getAttribute('id') || Math.random().toString(36).substr(2, 8);\n    definitionElement?.setAttribute('term-id', termId);\n}\n\nexport function setDefinitonAriaAttributes(\n    definitionElement: HTMLElement,\n    termElement: HTMLElement,\n): void {\n    const ariaLive = termElement.getAttribute('aria-live') || 'polite';\n    definitionElement?.setAttribute('aria-live', ariaLive);\n    definitionElement?.setAttribute('aria-modal', 'true');\n}\n\nexport function setDefinitionPosition(\n    definitionElement: HTMLElement,\n    termElement: HTMLElement,\n): void {\n    const {\n        x: termX,\n        y: termY,\n        right: termRight,\n        left: termLeft,\n        width: termWidth,\n        height: termHeight,\n    } = termElement.getBoundingClientRect();\n\n    const termParent = termParentElement(termElement);\n\n    if (!termParent) {\n        return;\n    }\n\n    const {right: termParentRight, left: termParentLeft} = termParent.getBoundingClientRect();\n\n    if ((termParentRight < termLeft || termParentLeft > termRight) && !isListenerNeeded) {\n        closeDefinition(definitionElement);\n        return;\n    }\n\n    if (isListenerNeeded && termParent) {\n        termParent.addEventListener('scroll', termOnResize);\n        isListenerNeeded = false;\n    }\n\n    const relativeX = Number(definitionElement.getAttribute('relativeX'));\n    const relativeY = Number(definitionElement.getAttribute('relativeY'));\n\n    if (relativeX === termX && relativeY === termY) {\n        return;\n    }\n\n    definitionElement.setAttribute('relativeX', String(termX));\n    definitionElement.setAttribute('relativeY', String(termY));\n\n    const offsetTop = termHeight + 5;\n    const definitionParent = definitionElement.parentElement;\n\n    if (!definitionParent) {\n        return;\n    }\n\n    const {width: definitionWidth} = definitionElement.getBoundingClientRect();\n    const {left: definitionParentLeft} = definitionParent.getBoundingClientRect();\n\n    // If definition not fit document change base alignment\n    const definitionLeftCoordinate = Number(getCoords(termElement).left);\n    const definitionRightCoordinate = definitionWidth + definitionLeftCoordinate;\n\n    const definitionOutOfScreenOnLeft = definitionLeftCoordinate - definitionWidth < 0;\n    const definitionOutOfScreenOnRight = definitionRightCoordinate > document.body.clientWidth;\n\n    const isAlignSwapped = definitionOutOfScreenOnRight || document.dir === 'rtl';\n    const fitDefinitionDocument =\n        isAlignSwapped && !definitionOutOfScreenOnLeft ? definitionWidth - termWidth : 0;\n    const customHeaderTop = getCoords(definitionParent).top - definitionParent.offsetTop;\n    const offsetRight = 5;\n    const shiftLeft = definitionOutOfScreenOnRight\n        ? definitionRightCoordinate - document.body.clientWidth + offsetRight\n        : 0;\n    const offsetLeft =\n        getCoords(termElement).left -\n        definitionParentLeft +\n        definitionParent.offsetLeft -\n        fitDefinitionDocument;\n\n    const isShiftLeftNeeded = offsetLeft + definitionWidth >= document.body.clientWidth;\n\n    definitionElement.style.top =\n        Number(getCoords(termElement).top + offsetTop - customHeaderTop) + 'px';\n    definitionElement.style.left = Number(offsetLeft - (isShiftLeftNeeded ? shiftLeft : 0)) + 'px';\n}\n\nfunction termOnResize() {\n    const openedDefinition = document.getElementsByClassName(openDefinitionClass)[0] as HTMLElement;\n\n    if (!openedDefinition) {\n        return;\n    }\n    const termId = openedDefinition.getAttribute('term-id') || '';\n    const termElement = document.getElementById(termId);\n\n    if (!termElement) {\n        return;\n    }\n\n    setDefinitionPosition(openedDefinition, termElement);\n}\n\nfunction termParentElement(term: HTMLElement | null) {\n    if (!term) {\n        return null;\n    }\n\n    const closestScrollableParent = term.closest('table') || term.closest('code');\n\n    return closestScrollableParent || term.parentElement;\n}\n\nexport function openDefinition(target: HTMLElement) {\n    const openedDefinition = document.getElementsByClassName(openDefinitionClass)[0] as HTMLElement;\n\n    const termId = target.getAttribute('id');\n    const termKey = target.getAttribute('term-key');\n    let definitionElement = document.getElementById(termKey + '_element');\n\n    if (termKey && !definitionElement) {\n        definitionElement = createDefinitionElement(target);\n    }\n\n    const isSameTerm = openedDefinition && termId === openedDefinition.getAttribute('term-id');\n    if (isSameTerm) {\n        closeDefinition(openedDefinition);\n        return;\n    }\n\n    const isTargetDefinitionContent = target.closest(\n        [Selector.CONTENT.replace(' ', ''), openClass].join('.'),\n    );\n\n    if (openedDefinition && !isTargetDefinitionContent) {\n        closeDefinition(openedDefinition);\n    }\n\n    if (!target.matches(Selector.TITLE) || !definitionElement) {\n        return;\n    }\n\n    setDefinitionId(definitionElement, target);\n    setDefinitonAriaAttributes(definitionElement, target);\n    setDefinitionPosition(definitionElement, target);\n\n    definitionElement.classList.toggle(openClass);\n\n    trapFocus(definitionElement);\n}\n\nexport function closeDefinition(definition: HTMLElement) {\n    definition.classList.remove(openClass);\n    const termId = definition.getAttribute('term-id') || '';\n    const term = document.getElementById(termId);\n    const termParent = termParentElement(term);\n\n    if (!termParent) {\n        return;\n    }\n\n    termParent.removeEventListener('scroll', termOnResize);\n    term?.focus(); // Set focus back to open button after closing popup\n\n    isListenerNeeded = true;\n}\n\nfunction getCoords(elem: HTMLElement) {\n    const box = elem.getBoundingClientRect();\n\n    const body = document.body;\n    const docEl = document.documentElement;\n\n    const scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    const scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    const clientTop = docEl.clientTop || body.clientTop || 0;\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n\n    return {top: Math.round(top), left: Math.round(left)};\n}\n\nexport function trapFocus(element: HTMLElement) {\n    const focusableElements = element.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n    );\n    const firstFocusableElement = focusableElements[0] as HTMLElement;\n    const lastFocusableElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n    if (firstFocusableElement) {\n        firstFocusableElement.focus();\n    }\n\n    element.addEventListener('keydown', function (e) {\n        const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n        if (!isTabPressed) {\n            return;\n        }\n\n        if (e.shiftKey) {\n            if (document.activeElement === firstFocusableElement) {\n                lastFocusableElement.focus();\n                e.preventDefault();\n            }\n        } else if (document.activeElement === lastFocusableElement) {\n            firstFocusableElement.focus();\n            e.preventDefault();\n        }\n    });\n}\n", "import {getEventTarget, isCustom} from '../utils';\n\nimport {\n    closeDefinition,\n    openClass,\n    openDefinition,\n    openDefinitionClass,\n    setDefinitionPosition,\n} from './utils';\n\nif (typeof document !== 'undefined') {\n    document.addEventListener('click', (event) => {\n        if (getEventTarget(event) || !isCustom(event)) {\n            openDefinition(getEventTarget(event) as HTMLElement);\n        }\n    });\n\n    document.addEventListener('keydown', (event) => {\n        const openedDefinition = document.getElementsByClassName(\n            openDefinitionClass,\n        )[0] as HTMLElement;\n\n        if (event.key === 'Enter' && document.activeElement) {\n            openDefinition(document.activeElement as HTMLElement);\n        }\n\n        if (event.key === 'Escape' && openedDefinition) {\n            closeDefinition(openedDefinition);\n        }\n    });\n\n    window.addEventListener('resize', () => {\n        const openedDefinition = document.getElementsByClassName(\n            openDefinitionClass,\n        )[0] as HTMLElement;\n\n        if (!openedDefinition) {\n            return;\n        }\n\n        const termId = openedDefinition.getAttribute('term-id') || '';\n        const termElement = document.getElementById(termId);\n\n        if (!termElement) {\n            openedDefinition.classList.toggle(openClass);\n            return;\n        }\n\n        setDefinitionPosition(openedDefinition, termElement);\n    });\n}\n", "export const WIDE_ELEMENTS_SELECTOR = '[wide-content]';\n", "export default `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M7.754 2.004a.75.75 0 0 0 0 1.5h4.75v4.742a.75.75 0 0 0 1.5 0V2.754a.75.75 0 0 0-.75-.75zm.492 11.992a.75.75 0 0 0 0-1.5h-4.75V7.754a.75.75 0 0 0-1.5 0v5.492a.75.75 0 0 0 .75.75z\" clip-rule=\"evenodd\"/></svg>`;\n", "export default `<svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"close-action\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.46967 9.46967C9.76256 9.17678 10.2374 9.17678 10.5303 9.46967L14 12.9393L17.4697 9.46967C17.7626 9.17678 18.2374 9.17678 18.5303 9.46967C18.8232 9.76256 18.8232 10.2374 18.5303 10.5303L15.0607 14L18.5303 17.4697C18.8232 17.7626 18.8232 18.2374 18.5303 18.5303C18.2374 18.8232 17.7626 18.8232 17.4697 18.5303L14 15.0607L10.5303 18.5303C10.2374 18.8232 9.76256 18.8232 9.46967 18.5303C9.17678 18.2374 9.17678 17.7626 9.46967 17.4697L12.9393 14L9.46967 10.5303C9.17678 10.2374 9.17678 9.76256 9.46967 9.46967Z\" fill=\"var(--g-color-text-primary)\" fillOpacity=\"0.85\"/></svg>`;\n", "import closeIcon from './icons/close';\n\nconst remove = () => {\n    if (!window.wideTemplate) {\n        return;\n    }\n\n    window.wideTemplate.style.display = 'none';\n    window.wideTemplate.content(undefined);\n};\n\nconst tbodyOf = (node: HTMLElement) => {\n    if (node.tagName !== 'TABLE') {\n        return undefined;\n    }\n\n    const elements = Array.from(node.children);\n\n    const thead = elements.find((child) => child.tagName === 'THEAD');\n\n    if (thead) {\n        return undefined;\n    }\n\n    const tbody = elements.find((child) => child.tagName === 'TBODY');\n\n    return tbody;\n};\n\ntype ModalContainer = NonNullable<typeof window.wideTemplate>;\n\n/* @todo refactor to markup with innerHTML @v8tenko */\n\nconst container = () => {\n    if (window.wideTemplate) {\n        return window.wideTemplate;\n    }\n\n    const template = document.createElement('div') as ModalContainer;\n    template.classList.add('dc-doc-page', 'wide-container');\n\n    const overlay = document.createElement('div');\n    overlay.classList.add('wide-content-overlay');\n    overlay.addEventListener('click', remove);\n\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('yfm', 'wide-content-wrapper');\n\n    const toolbar = document.createElement('div');\n    toolbar.classList.add('wide-toolbar');\n\n    const close = document.createElement('div');\n    close.classList.add('wide-actions');\n    close.addEventListener('click', remove);\n    close.innerHTML = closeIcon;\n\n    const title = document.createElement('p');\n    title.classList.add('wide-entity-name');\n\n    template.label = (content?: string) => {\n        title.innerHTML = content || '';\n    };\n\n    const content = document.createElement('div');\n    content.classList.add('wide-content');\n\n    template.content = (target?: Element) => {\n        if (typeof target === 'undefined') {\n            content.innerHTML = '';\n\n            return;\n        }\n\n        const cloned = target.cloneNode(true) as HTMLElement;\n\n        const tbody = tbodyOf(cloned);\n\n        /* used to stretch single tbody to 100% */\n        tbody?.classList?.add('wide-thead-content');\n\n        content.replaceChildren(cloned);\n    };\n\n    toolbar.append(title, close);\n    wrapper.append(toolbar, content);\n    template.append(overlay, wrapper);\n\n    template.style.display = 'none';\n    document.body.appendChild(template);\n\n    window.wideTemplate = template;\n\n    return template;\n};\n\nconst render = (content: HTMLElement) => {\n    const template = container();\n\n    template.label(content.title);\n    template.content(content);\n\n    template.style.display = 'flex';\n};\n\nexport const modal = {\n    render,\n    remove,\n};\n", "import {WIDE_ELEMENTS_SELECTOR} from './constants';\nimport expand from './icons/expand';\nimport {modal} from './modal';\n\nconst wrap = (target: HTMLElement) => {\n    if (target.parentElement?.classList.contains('wide-element-wrapper')) {\n        return;\n    }\n\n    target.classList.add('wide-inner-element');\n\n    const handler = document.createElement('div');\n\n    handler.innerHTML = expand;\n    handler.classList.add('wide-content-viewer');\n    handler.addEventListener('click', () => modal.render(target));\n\n    const container = document.createElement('div');\n\n    container.classList.add('wide-element-wrapper');\n\n    target.before(container);\n\n    container.appendChild(target);\n    container.appendChild(handler);\n};\n\nexport const applyWideMode = () => {\n    const allWideElements = Array.from(\n        document.querySelectorAll(WIDE_ELEMENTS_SELECTOR),\n    ) as HTMLElement[];\n\n    allWideElements.forEach(wrap);\n};\n", "import {applyWideMode} from './apply';\n\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    window.addEventListener('load', applyWideMode);\n}\n", "import {applyWideMode} from './wide-mode/apply';\n\nconst patch = () => {\n    applyWideMode();\n};\n\nif (typeof window !== 'undefined') {\n    window.patchAfterRender = patch;\n}\n"],
  "mappings": "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",
  "names": ["getRootNode", "GLOBAL_KEY", "Selector", "ClassName", "getEventTarget", "event", "path", "isCustom", "target", "YfmCutController", "doc", "title", "cutId", "cutNode", "element", "TABS_CLASSNAME", "TAB_CLASSNAME", "TAB_PANEL_CLASSNAME", "TABS_LIST_CLASSNAME", "ACTIVE_CLASSNAME", "GROUP_DATA_KEY", "TAB_DATA_KEY", "TAB_DATA_VARIANT", "TAB_DATA_ID", "DEFAULT_TABS_GROUP_PREFIX", "TAB_FORCED_OPEN", "TABS_DROPDOWN_SELECT", "TABS_RADIO_CLASSNAME", "GLOBAL_SYMBOL", "getEventTarget", "event", "path", "isCustom", "target", "getClosestScrollableParent", "element", "getOffsetByScrollableParent", "scrollableParent", "elementBounds", "scrollableParentBounds", "Selector", "TabsController", "document", "tab", "direction", "tabs", "nodes", "currentTab", "currentTabIndex", "key", "newIndex", "handler", "id", "options", "targetTab", "group", "variant", "previousTargetOffset", "isForced", "root", "singleTabSelector", "updated", "elements", "i", "title", "content", "input", "htmlElem", "tabList", "tabsContainer", "allTabs", "allPanels", "node", "targetIndex", "panel", "isTargetTab", "changed", "dropdown", "select", "menu", "changedIndex", "item", "menuItem", "accordion", "rect", "viewHeight", "targetOffset", "topDelta", "leftDelta", "scrollTopDelta", "scrollLeftDelta", "diplodocId", "align", "eventTab", "tabsRoot", "_a", "_b", "_c", "type", "tabEl", "matches", "getRootNode", "e", "content", "container"]
}
