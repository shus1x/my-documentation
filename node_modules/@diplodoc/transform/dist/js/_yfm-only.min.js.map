{
  "version": 3,
  "sources": ["../../src/js/utils.ts", "../../src/js/term/utils.ts", "../../src/js/term/index.ts"],
  "sourcesContent": ["export const getEventTarget = (event: Event) => {\n    const path = event.composedPath();\n    return Array.isArray(path) && path.length > 0 ? path[0] : event.target;\n};\n\nexport const isCustom = (event: Event) => {\n    const target = getEventTarget(event);\n    return !target || !(target as HTMLElement).matches;\n};\n", "export const Selector = {\n    TITLE: '.yfm .yfm-term_title',\n    CONTENT: '.yfm .yfm-term_dfn',\n};\nexport const openClass = 'open';\nexport const openDefinitionClass = Selector.CONTENT.replace(/\\./g, '') + ' ' + openClass;\nlet isListenerNeeded = true;\n\nexport function createDefinitionElement(termElement: HTMLElement) {\n    const termKey = termElement.getAttribute('term-key');\n    const definitionTemplate = document.getElementById(\n        `${termKey}_template`,\n    ) as HTMLTemplateElement;\n    const definitionElement = definitionTemplate?.content.cloneNode(true).firstChild as HTMLElement;\n\n    definitionTemplate?.parentElement?.appendChild(definitionElement);\n    definitionTemplate.remove();\n\n    return definitionElement;\n}\n\nexport function setDefinitionId(definitionElement: HTMLElement, termElement: HTMLElement): void {\n    const termId = termElement.getAttribute('id') || Math.random().toString(36).substr(2, 8);\n    definitionElement?.setAttribute('term-id', termId);\n}\n\nexport function setDefinitonAriaAttributes(\n    definitionElement: HTMLElement,\n    termElement: HTMLElement,\n): void {\n    const ariaLive = termElement.getAttribute('aria-live') || 'polite';\n    definitionElement?.setAttribute('aria-live', ariaLive);\n    definitionElement?.setAttribute('aria-modal', 'true');\n}\n\nexport function setDefinitionPosition(\n    definitionElement: HTMLElement,\n    termElement: HTMLElement,\n): void {\n    const {\n        x: termX,\n        y: termY,\n        right: termRight,\n        left: termLeft,\n        width: termWidth,\n        height: termHeight,\n    } = termElement.getBoundingClientRect();\n\n    const termParent = termParentElement(termElement);\n\n    if (!termParent) {\n        return;\n    }\n\n    const {right: termParentRight, left: termParentLeft} = termParent.getBoundingClientRect();\n\n    if ((termParentRight < termLeft || termParentLeft > termRight) && !isListenerNeeded) {\n        closeDefinition(definitionElement);\n        return;\n    }\n\n    if (isListenerNeeded && termParent) {\n        termParent.addEventListener('scroll', termOnResize);\n        isListenerNeeded = false;\n    }\n\n    const relativeX = Number(definitionElement.getAttribute('relativeX'));\n    const relativeY = Number(definitionElement.getAttribute('relativeY'));\n\n    if (relativeX === termX && relativeY === termY) {\n        return;\n    }\n\n    definitionElement.setAttribute('relativeX', String(termX));\n    definitionElement.setAttribute('relativeY', String(termY));\n\n    const offsetTop = termHeight + 5;\n    const definitionParent = definitionElement.parentElement;\n\n    if (!definitionParent) {\n        return;\n    }\n\n    const {width: definitionWidth} = definitionElement.getBoundingClientRect();\n    const {left: definitionParentLeft} = definitionParent.getBoundingClientRect();\n\n    // If definition not fit document change base alignment\n    const definitionLeftCoordinate = Number(getCoords(termElement).left);\n    const definitionRightCoordinate = definitionWidth + definitionLeftCoordinate;\n\n    const definitionOutOfScreenOnLeft = definitionLeftCoordinate - definitionWidth < 0;\n    const definitionOutOfScreenOnRight = definitionRightCoordinate > document.body.clientWidth;\n\n    const isAlignSwapped = definitionOutOfScreenOnRight || document.dir === 'rtl';\n    const fitDefinitionDocument =\n        isAlignSwapped && !definitionOutOfScreenOnLeft ? definitionWidth - termWidth : 0;\n    const customHeaderTop = getCoords(definitionParent).top - definitionParent.offsetTop;\n    const offsetRight = 5;\n    const shiftLeft = definitionOutOfScreenOnRight\n        ? definitionRightCoordinate - document.body.clientWidth + offsetRight\n        : 0;\n    const offsetLeft =\n        getCoords(termElement).left -\n        definitionParentLeft +\n        definitionParent.offsetLeft -\n        fitDefinitionDocument;\n\n    const isShiftLeftNeeded = offsetLeft + definitionWidth >= document.body.clientWidth;\n\n    definitionElement.style.top =\n        Number(getCoords(termElement).top + offsetTop - customHeaderTop) + 'px';\n    definitionElement.style.left = Number(offsetLeft - (isShiftLeftNeeded ? shiftLeft : 0)) + 'px';\n}\n\nfunction termOnResize() {\n    const openedDefinition = document.getElementsByClassName(openDefinitionClass)[0] as HTMLElement;\n\n    if (!openedDefinition) {\n        return;\n    }\n    const termId = openedDefinition.getAttribute('term-id') || '';\n    const termElement = document.getElementById(termId);\n\n    if (!termElement) {\n        return;\n    }\n\n    setDefinitionPosition(openedDefinition, termElement);\n}\n\nfunction termParentElement(term: HTMLElement | null) {\n    if (!term) {\n        return null;\n    }\n\n    const closestScrollableParent = term.closest('table') || term.closest('code');\n\n    return closestScrollableParent || term.parentElement;\n}\n\nexport function openDefinition(target: HTMLElement) {\n    const openedDefinition = document.getElementsByClassName(openDefinitionClass)[0] as HTMLElement;\n\n    const termId = target.getAttribute('id');\n    const termKey = target.getAttribute('term-key');\n    let definitionElement = document.getElementById(termKey + '_element');\n\n    if (termKey && !definitionElement) {\n        definitionElement = createDefinitionElement(target);\n    }\n\n    const isSameTerm = openedDefinition && termId === openedDefinition.getAttribute('term-id');\n    if (isSameTerm) {\n        closeDefinition(openedDefinition);\n        return;\n    }\n\n    const isTargetDefinitionContent = target.closest(\n        [Selector.CONTENT.replace(' ', ''), openClass].join('.'),\n    );\n\n    if (openedDefinition && !isTargetDefinitionContent) {\n        closeDefinition(openedDefinition);\n    }\n\n    if (!target.matches(Selector.TITLE) || !definitionElement) {\n        return;\n    }\n\n    setDefinitionId(definitionElement, target);\n    setDefinitonAriaAttributes(definitionElement, target);\n    setDefinitionPosition(definitionElement, target);\n\n    definitionElement.classList.toggle(openClass);\n\n    trapFocus(definitionElement);\n}\n\nexport function closeDefinition(definition: HTMLElement) {\n    definition.classList.remove(openClass);\n    const termId = definition.getAttribute('term-id') || '';\n    const term = document.getElementById(termId);\n    const termParent = termParentElement(term);\n\n    if (!termParent) {\n        return;\n    }\n\n    termParent.removeEventListener('scroll', termOnResize);\n    term?.focus(); // Set focus back to open button after closing popup\n\n    isListenerNeeded = true;\n}\n\nfunction getCoords(elem: HTMLElement) {\n    const box = elem.getBoundingClientRect();\n\n    const body = document.body;\n    const docEl = document.documentElement;\n\n    const scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    const scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    const clientTop = docEl.clientTop || body.clientTop || 0;\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n\n    return {top: Math.round(top), left: Math.round(left)};\n}\n\nexport function trapFocus(element: HTMLElement) {\n    const focusableElements = element.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n    );\n    const firstFocusableElement = focusableElements[0] as HTMLElement;\n    const lastFocusableElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n    if (firstFocusableElement) {\n        firstFocusableElement.focus();\n    }\n\n    element.addEventListener('keydown', function (e) {\n        const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n        if (!isTabPressed) {\n            return;\n        }\n\n        if (e.shiftKey) {\n            if (document.activeElement === firstFocusableElement) {\n                lastFocusableElement.focus();\n                e.preventDefault();\n            }\n        } else if (document.activeElement === lastFocusableElement) {\n            firstFocusableElement.focus();\n            e.preventDefault();\n        }\n    });\n}\n", "import {getEventTarget, isCustom} from '../utils';\n\nimport {\n    closeDefinition,\n    openClass,\n    openDefinition,\n    openDefinitionClass,\n    setDefinitionPosition,\n} from './utils';\n\nif (typeof document !== 'undefined') {\n    document.addEventListener('click', (event) => {\n        if (getEventTarget(event) || !isCustom(event)) {\n            openDefinition(getEventTarget(event) as HTMLElement);\n        }\n    });\n\n    document.addEventListener('keydown', (event) => {\n        const openedDefinition = document.getElementsByClassName(\n            openDefinitionClass,\n        )[0] as HTMLElement;\n\n        if (event.key === 'Enter' && document.activeElement) {\n            openDefinition(document.activeElement as HTMLElement);\n        }\n\n        if (event.key === 'Escape' && openedDefinition) {\n            closeDefinition(openedDefinition);\n        }\n    });\n\n    window.addEventListener('resize', () => {\n        const openedDefinition = document.getElementsByClassName(\n            openDefinitionClass,\n        )[0] as HTMLElement;\n\n        if (!openedDefinition) {\n            return;\n        }\n\n        const termId = openedDefinition.getAttribute('term-id') || '';\n        const termElement = document.getElementById(termId);\n\n        if (!termElement) {\n            openedDefinition.classList.toggle(openClass);\n            return;\n        }\n\n        setDefinitionPosition(openedDefinition, termElement);\n    });\n}\n"],
  "mappings": "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",
  "names": ["getEventTarget", "event", "path", "isCustom", "target", "Selector", "openClass", "openDefinitionClass", "isListenerNeeded", "createDefinitionElement", "termElement", "_a", "termKey", "definitionTemplate", "definitionElement", "setDefinitionId", "termId", "setDefinitonAriaAttributes", "ariaLive", "setDefinitionPosition", "termX", "termY", "termRight", "termLeft", "termWidth", "termHeight", "termParent", "termParentElement", "termParentRight", "termParentLeft", "closeDefinition", "termOnResize", "relativeX", "relativeY", "offsetTop", "definitionParent", "definitionWidth", "definitionParentLeft", "definitionLeftCoordinate", "getCoords", "definitionRightCoordinate", "definitionOutOfScreenOnLeft", "definitionOutOfScreenOnRight", "fitDefinitionDocument", "customHeaderTop", "shiftLeft", "offsetLeft", "isShiftLeftNeeded", "openedDefinition", "term", "openDefinition", "isTargetDefinitionContent", "trapFocus", "definition", "elem", "box", "body", "docEl", "scrollTop", "scrollLeft", "clientTop", "clientLeft", "top", "left", "element", "focusableElements", "firstFocusableElement", "lastFocusableElement", "e"]
}
