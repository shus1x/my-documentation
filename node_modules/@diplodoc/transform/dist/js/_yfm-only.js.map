{
  "version": 3,
  "sources": ["../../src/js/utils.ts", "../../src/js/term/utils.ts", "../../src/js/term/index.ts"],
  "sourcesContent": ["export const getEventTarget = (event: Event) => {\n    const path = event.composedPath();\n    return Array.isArray(path) && path.length > 0 ? path[0] : event.target;\n};\n\nexport const isCustom = (event: Event) => {\n    const target = getEventTarget(event);\n    return !target || !(target as HTMLElement).matches;\n};\n", "export const Selector = {\n    TITLE: '.yfm .yfm-term_title',\n    CONTENT: '.yfm .yfm-term_dfn',\n};\nexport const openClass = 'open';\nexport const openDefinitionClass = Selector.CONTENT.replace(/\\./g, '') + ' ' + openClass;\nlet isListenerNeeded = true;\n\nexport function createDefinitionElement(termElement: HTMLElement) {\n    const termKey = termElement.getAttribute('term-key');\n    const definitionTemplate = document.getElementById(\n        `${termKey}_template`,\n    ) as HTMLTemplateElement;\n    const definitionElement = definitionTemplate?.content.cloneNode(true).firstChild as HTMLElement;\n\n    definitionTemplate?.parentElement?.appendChild(definitionElement);\n    definitionTemplate.remove();\n\n    return definitionElement;\n}\n\nexport function setDefinitionId(definitionElement: HTMLElement, termElement: HTMLElement): void {\n    const termId = termElement.getAttribute('id') || Math.random().toString(36).substr(2, 8);\n    definitionElement?.setAttribute('term-id', termId);\n}\n\nexport function setDefinitonAriaAttributes(\n    definitionElement: HTMLElement,\n    termElement: HTMLElement,\n): void {\n    const ariaLive = termElement.getAttribute('aria-live') || 'polite';\n    definitionElement?.setAttribute('aria-live', ariaLive);\n    definitionElement?.setAttribute('aria-modal', 'true');\n}\n\nexport function setDefinitionPosition(\n    definitionElement: HTMLElement,\n    termElement: HTMLElement,\n): void {\n    const {\n        x: termX,\n        y: termY,\n        right: termRight,\n        left: termLeft,\n        width: termWidth,\n        height: termHeight,\n    } = termElement.getBoundingClientRect();\n\n    const termParent = termParentElement(termElement);\n\n    if (!termParent) {\n        return;\n    }\n\n    const {right: termParentRight, left: termParentLeft} = termParent.getBoundingClientRect();\n\n    if ((termParentRight < termLeft || termParentLeft > termRight) && !isListenerNeeded) {\n        closeDefinition(definitionElement);\n        return;\n    }\n\n    if (isListenerNeeded && termParent) {\n        termParent.addEventListener('scroll', termOnResize);\n        isListenerNeeded = false;\n    }\n\n    const relativeX = Number(definitionElement.getAttribute('relativeX'));\n    const relativeY = Number(definitionElement.getAttribute('relativeY'));\n\n    if (relativeX === termX && relativeY === termY) {\n        return;\n    }\n\n    definitionElement.setAttribute('relativeX', String(termX));\n    definitionElement.setAttribute('relativeY', String(termY));\n\n    const offsetTop = termHeight + 5;\n    const definitionParent = definitionElement.parentElement;\n\n    if (!definitionParent) {\n        return;\n    }\n\n    const {width: definitionWidth} = definitionElement.getBoundingClientRect();\n    const {left: definitionParentLeft} = definitionParent.getBoundingClientRect();\n\n    // If definition not fit document change base alignment\n    const definitionLeftCoordinate = Number(getCoords(termElement).left);\n    const definitionRightCoordinate = definitionWidth + definitionLeftCoordinate;\n\n    const definitionOutOfScreenOnLeft = definitionLeftCoordinate - definitionWidth < 0;\n    const definitionOutOfScreenOnRight = definitionRightCoordinate > document.body.clientWidth;\n\n    const isAlignSwapped = definitionOutOfScreenOnRight || document.dir === 'rtl';\n    const fitDefinitionDocument =\n        isAlignSwapped && !definitionOutOfScreenOnLeft ? definitionWidth - termWidth : 0;\n    const customHeaderTop = getCoords(definitionParent).top - definitionParent.offsetTop;\n    const offsetRight = 5;\n    const shiftLeft = definitionOutOfScreenOnRight\n        ? definitionRightCoordinate - document.body.clientWidth + offsetRight\n        : 0;\n    const offsetLeft =\n        getCoords(termElement).left -\n        definitionParentLeft +\n        definitionParent.offsetLeft -\n        fitDefinitionDocument;\n\n    const isShiftLeftNeeded = offsetLeft + definitionWidth >= document.body.clientWidth;\n\n    definitionElement.style.top =\n        Number(getCoords(termElement).top + offsetTop - customHeaderTop) + 'px';\n    definitionElement.style.left = Number(offsetLeft - (isShiftLeftNeeded ? shiftLeft : 0)) + 'px';\n}\n\nfunction termOnResize() {\n    const openedDefinition = document.getElementsByClassName(openDefinitionClass)[0] as HTMLElement;\n\n    if (!openedDefinition) {\n        return;\n    }\n    const termId = openedDefinition.getAttribute('term-id') || '';\n    const termElement = document.getElementById(termId);\n\n    if (!termElement) {\n        return;\n    }\n\n    setDefinitionPosition(openedDefinition, termElement);\n}\n\nfunction termParentElement(term: HTMLElement | null) {\n    if (!term) {\n        return null;\n    }\n\n    const closestScrollableParent = term.closest('table') || term.closest('code');\n\n    return closestScrollableParent || term.parentElement;\n}\n\nexport function openDefinition(target: HTMLElement) {\n    const openedDefinition = document.getElementsByClassName(openDefinitionClass)[0] as HTMLElement;\n\n    const termId = target.getAttribute('id');\n    const termKey = target.getAttribute('term-key');\n    let definitionElement = document.getElementById(termKey + '_element');\n\n    if (termKey && !definitionElement) {\n        definitionElement = createDefinitionElement(target);\n    }\n\n    const isSameTerm = openedDefinition && termId === openedDefinition.getAttribute('term-id');\n    if (isSameTerm) {\n        closeDefinition(openedDefinition);\n        return;\n    }\n\n    const isTargetDefinitionContent = target.closest(\n        [Selector.CONTENT.replace(' ', ''), openClass].join('.'),\n    );\n\n    if (openedDefinition && !isTargetDefinitionContent) {\n        closeDefinition(openedDefinition);\n    }\n\n    if (!target.matches(Selector.TITLE) || !definitionElement) {\n        return;\n    }\n\n    setDefinitionId(definitionElement, target);\n    setDefinitonAriaAttributes(definitionElement, target);\n    setDefinitionPosition(definitionElement, target);\n\n    definitionElement.classList.toggle(openClass);\n\n    trapFocus(definitionElement);\n}\n\nexport function closeDefinition(definition: HTMLElement) {\n    definition.classList.remove(openClass);\n    const termId = definition.getAttribute('term-id') || '';\n    const term = document.getElementById(termId);\n    const termParent = termParentElement(term);\n\n    if (!termParent) {\n        return;\n    }\n\n    termParent.removeEventListener('scroll', termOnResize);\n    term?.focus(); // Set focus back to open button after closing popup\n\n    isListenerNeeded = true;\n}\n\nfunction getCoords(elem: HTMLElement) {\n    const box = elem.getBoundingClientRect();\n\n    const body = document.body;\n    const docEl = document.documentElement;\n\n    const scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    const scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    const clientTop = docEl.clientTop || body.clientTop || 0;\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n\n    return {top: Math.round(top), left: Math.round(left)};\n}\n\nexport function trapFocus(element: HTMLElement) {\n    const focusableElements = element.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n    );\n    const firstFocusableElement = focusableElements[0] as HTMLElement;\n    const lastFocusableElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n    if (firstFocusableElement) {\n        firstFocusableElement.focus();\n    }\n\n    element.addEventListener('keydown', function (e) {\n        const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n        if (!isTabPressed) {\n            return;\n        }\n\n        if (e.shiftKey) {\n            if (document.activeElement === firstFocusableElement) {\n                lastFocusableElement.focus();\n                e.preventDefault();\n            }\n        } else if (document.activeElement === lastFocusableElement) {\n            firstFocusableElement.focus();\n            e.preventDefault();\n        }\n    });\n}\n", "import {getEventTarget, isCustom} from '../utils';\n\nimport {\n    closeDefinition,\n    openClass,\n    openDefinition,\n    openDefinitionClass,\n    setDefinitionPosition,\n} from './utils';\n\nif (typeof document !== 'undefined') {\n    document.addEventListener('click', (event) => {\n        if (getEventTarget(event) || !isCustom(event)) {\n            openDefinition(getEventTarget(event) as HTMLElement);\n        }\n    });\n\n    document.addEventListener('keydown', (event) => {\n        const openedDefinition = document.getElementsByClassName(\n            openDefinitionClass,\n        )[0] as HTMLElement;\n\n        if (event.key === 'Enter' && document.activeElement) {\n            openDefinition(document.activeElement as HTMLElement);\n        }\n\n        if (event.key === 'Escape' && openedDefinition) {\n            closeDefinition(openedDefinition);\n        }\n    });\n\n    window.addEventListener('resize', () => {\n        const openedDefinition = document.getElementsByClassName(\n            openDefinitionClass,\n        )[0] as HTMLElement;\n\n        if (!openedDefinition) {\n            return;\n        }\n\n        const termId = openedDefinition.getAttribute('term-id') || '';\n        const termElement = document.getElementById(termId);\n\n        if (!termElement) {\n            openedDefinition.classList.toggle(openClass);\n            return;\n        }\n\n        setDefinitionPosition(openedDefinition, termElement);\n    });\n}\n"],
  "mappings": "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",
  "names": []
}
