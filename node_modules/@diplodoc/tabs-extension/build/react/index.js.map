{
  "version": 3,
  "sources": ["../../src/react/index.ts", "../../src/react/useDiplodocTabs.ts", "../../src/common.ts"],
  "sourcesContent": ["export type {Tab, UseDiplodocTabsCallback} from './useDiplodocTabs';\nexport {useDiplodocTabs} from './useDiplodocTabs';\n", "import {useCallback, useEffect} from 'react';\n\nimport {GLOBAL_SYMBOL, SelectedTabEvent, Tab} from '../common';\nimport {ISelectTabByIdOptions} from '../runtime/TabsController';\n\nexport type {Tab};\n\nexport type UseDiplodocTabsCallback = (tab: Tab, currentTabId?: string) => void;\n\nexport function useDiplodocTabs(callback: UseDiplodocTabsCallback) {\n    const selectTabHandle = useCallback(\n        ({tab, currentTabId}: SelectedTabEvent) => {\n            callback(tab, currentTabId);\n        },\n        [callback],\n    );\n\n    useEffect(() => window[GLOBAL_SYMBOL].onSelectTab(selectTabHandle), [selectTabHandle]);\n\n    return {\n        selectTabById: useCallback(\n            (tabId: string, options?: ISelectTabByIdOptions) =>\n                window[GLOBAL_SYMBOL].selectTabById(tabId, options),\n            [],\n        ),\n        selectTab: useCallback((tab: Tab) => window[GLOBAL_SYMBOL].selectTab(tab), []),\n    };\n}\n", "import {type TabsController} from './runtime/TabsController';\n\nexport const TAB_RE = /`?{% list tabs .*?%}`?/;\nexport const TABS_CLASSNAME = 'yfm-tabs';\nexport const TAB_CLASSNAME = 'yfm-tab';\nexport const TAB_PANEL_CLASSNAME = 'yfm-tab-panel';\nexport const TABS_LIST_CLASSNAME = 'yfm-tab-list';\nexport const ACTIVE_CLASSNAME = 'active';\nexport const TAB_GROUP_CLASSNAME = 'yfm-tab-group';\nexport const TAB_ACTIVE_KEY = 'data-diplodoc-is-active';\nexport const GROUP_DATA_KEY = 'data-diplodoc-group';\nexport const TAB_DATA_KEY = 'data-diplodoc-key';\nexport const TAB_DATA_VARIANT = 'data-diplodoc-variant';\nexport const TAB_DATA_ID = 'data-diplodoc-id';\nexport const DEFAULT_TABS_GROUP_PREFIX = 'defaultTabsGroup-';\nexport const ACTIVE_TAB_TEXT = '{selected}';\nexport const TAB_FORCED_OPEN = 'data-diplodoc-forced';\n\nexport const TABS_DROPDOWN_CLASSNAME = 'yfm-tabs-dropdown';\nexport const TABS_DROPDOWN_MENU_CLASSNAME = 'yfm-tabs-dropdown-menu';\nexport const TABS_DROPDOWN_SELECT = 'yfm-tabs-dropdown-select';\n\nexport const TABS_ACCORDION_CLASSNAME = 'yfm-tabs-accordion';\nexport const TABS_ACCORDION_CLIENT_HEIGHT = 'data-yfm-tabs-accordion-client-heights';\n\nexport const TABS_RADIO_CLASSNAME = 'yfm-tabs-vertical';\nexport const VERTICAL_TAB_CLASSNAME = 'yfm-vertical-tab';\nexport const TAB_DATA_VERTICAL_TAB = 'data-diplodoc-vertical-tab';\nexport const TAB_RADIO_KEY = 'data-diplodoc-input';\n\nexport enum TabsVariants {\n    Regular = 'regular',\n    Radio = 'radio',\n    Dropdown = 'dropdown',\n    Accordion = 'accordion',\n}\n\nexport type EnabledVariants = Partial<Record<TabsVariants, boolean>>;\n\nexport interface Tab {\n    group?: string;\n    key: string;\n    variant: TabsVariants;\n}\n\nexport interface SelectedTabEvent {\n    tab: Tab;\n    currentTabId?: string;\n}\n\nexport const GLOBAL_SYMBOL: unique symbol = Symbol.for('diplodocTabs');\n\ndeclare global {\n    interface Window {\n        [GLOBAL_SYMBOL]: TabsController;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAAqC;;;ACkD9B,IAAM,gBAA+B,OAAO,IAAI,cAAc;;;ADzC9D,SAAS,gBAAgB,UAAmC;AAC/D,QAAM,sBAAkB;AAAA,IACpB,CAAC,EAAC,KAAK,aAAY,MAAwB;AACvC,eAAS,KAAK,YAAY;AAAA,IAC9B;AAAA,IACA,CAAC,QAAQ;AAAA,EACb;AAEA,8BAAU,MAAM,OAAO,aAAa,EAAE,YAAY,eAAe,GAAG,CAAC,eAAe,CAAC;AAErF,SAAO;AAAA,IACH,mBAAe;AAAA,MACX,CAAC,OAAe,YACZ,OAAO,aAAa,EAAE,cAAc,OAAO,OAAO;AAAA,MACtD,CAAC;AAAA,IACL;AAAA,IACA,eAAW,0BAAY,CAAC,QAAa,OAAO,aAAa,EAAE,UAAU,GAAG,GAAG,CAAC,CAAC;AAAA,EACjF;AACJ;",
  "names": []
}
