import { type TabsController } from './runtime/TabsController';
export declare const TAB_RE: RegExp;
export declare const TABS_CLASSNAME = "yfm-tabs";
export declare const TAB_CLASSNAME = "yfm-tab";
export declare const TAB_PANEL_CLASSNAME = "yfm-tab-panel";
export declare const TABS_LIST_CLASSNAME = "yfm-tab-list";
export declare const ACTIVE_CLASSNAME = "active";
export declare const TAB_GROUP_CLASSNAME = "yfm-tab-group";
export declare const TAB_ACTIVE_KEY = "data-diplodoc-is-active";
export declare const GROUP_DATA_KEY = "data-diplodoc-group";
export declare const TAB_DATA_KEY = "data-diplodoc-key";
export declare const TAB_DATA_VARIANT = "data-diplodoc-variant";
export declare const TAB_DATA_ID = "data-diplodoc-id";
export declare const DEFAULT_TABS_GROUP_PREFIX = "defaultTabsGroup-";
export declare const ACTIVE_TAB_TEXT = "{selected}";
export declare const TAB_FORCED_OPEN = "data-diplodoc-forced";
export declare const TABS_DROPDOWN_CLASSNAME = "yfm-tabs-dropdown";
export declare const TABS_DROPDOWN_MENU_CLASSNAME = "yfm-tabs-dropdown-menu";
export declare const TABS_DROPDOWN_SELECT = "yfm-tabs-dropdown-select";
export declare const TABS_ACCORDION_CLASSNAME = "yfm-tabs-accordion";
export declare const TABS_ACCORDION_CLIENT_HEIGHT = "data-yfm-tabs-accordion-client-heights";
export declare const TABS_RADIO_CLASSNAME = "yfm-tabs-vertical";
export declare const VERTICAL_TAB_CLASSNAME = "yfm-vertical-tab";
export declare const TAB_DATA_VERTICAL_TAB = "data-diplodoc-vertical-tab";
export declare const TAB_RADIO_KEY = "data-diplodoc-input";
export declare enum TabsVariants {
    Regular = "regular",
    Radio = "radio",
    Dropdown = "dropdown",
    Accordion = "accordion"
}
export type EnabledVariants = Partial<Record<TabsVariants, boolean>>;
export interface Tab {
    group?: string;
    key: string;
    variant: TabsVariants;
}
export interface SelectedTabEvent {
    tab: Tab;
    currentTabId?: string;
}
export declare const GLOBAL_SYMBOL: unique symbol;
declare global {
    interface Window {
        [GLOBAL_SYMBOL]: TabsController;
    }
}
